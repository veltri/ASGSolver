ERROR: ld.so: object 'libgtk3-nocsd.so.0' from LD_PRELOAD cannot be preloaded (cannot open shared object file): ignored.
[runlim] version:		1.7
[runlim] time limit:		1800 seconds
[runlim] real time limit:	311040000 seconds
[runlim] space limit:		12288 MB
[runlim] argv[0]:		java
[runlim] argv[1]:		-Xmx8192m
[runlim] argv[2]:		-DentityExpansionLimit=1000000
[runlim] argv[3]:		-cp
[runlim] argv[4]:		bin:./lib/DLVwrapper-v4.2.jar
[runlim] argv[5]:		algorithm.NTUFacade
[runlim] argv[6]:		-reasoning=4core
[runlim] argv[7]:		-stats
[runlim] argv[8]:		-meta=/home/cesco/Workspace/GraphGenerator/outputIndivisibleGoods6_4/meta.xml
[runlim] argv[9]:		/home/cesco/Workspace/GraphGenerator/outputIndivisibleGoods6_4/
[runlim] start:			Sun Feb 17 22:43:12 2019
[runlim] main pid:		11469
Imputation answer sets:
[runlim] sample:		10.1 seconds, 140.0 MB
[runlim] sample:		20.1 seconds, 247.3 MB
[runlim] sample:		30.1 seconds, 432.0 MB
[runlim] sample:		40.1 seconds, 451.6 MB
[runlim] sample:		50.1 seconds, 816.6 MB
[runlim] sample:		60.1 seconds, 831.8 MB
[runlim] sample:		70.1 seconds, 851.7 MB
[runlim] sample:		80.1 seconds, 871.3 MB
[runlim] sample:		90.1 seconds, 1570.1 MB
{ distrib(0) distrib(1) get(a4, 0) get(a2, 0) get(a3, 0) get(a1, 0) get(a5, 0) get(a0, 1) active(a4, g1) active(a4, g2) active(a2, g0) active(a2, g3) active(a3, g1) active(a1, g2) producer(a4) producer(a2) producer(a3) producer(a1) producer(a5) producer(a0) distributed(0) distributed(1) assembled(1) lowerThan(0, 1) good(g0) good(g1) good(g2) good(g3) produced(g0, 1) produced(g1, 2) produced(g2, 2) produced(g3, 1) }
{ distrib(0) distrib(1) get(a4, 0) get(a2, 0) get(a3, 0) get(a1, 0) get(a5, 1) get(a0, 0) active(a4, g1) active(a4, g2) active(a2, g0) active(a2, g3) active(a3, g1) active(a1, g2) producer(a4) producer(a2) producer(a3) producer(a1) producer(a5) producer(a0) distributed(0) distributed(1) assembled(1) lowerThan(0, 1) good(g0) good(g1) good(g2) good(g3) produced(g0, 1) produced(g1, 2) produced(g2, 2) produced(g3, 1) }
{ distrib(0) distrib(1) get(a4, 0) get(a2, 0) get(a3, 0) get(a1, 1) get(a5, 0) get(a0, 0) active(a4, g1) active(a4, g2) active(a2, g0) active(a2, g3) active(a3, g1) active(a1, g2) producer(a4) producer(a2) producer(a3) producer(a1) producer(a5) producer(a0) distributed(0) distributed(1) assembled(1) lowerThan(0, 1) good(g0) good(g1) good(g2) good(g3) produced(g0, 1) produced(g1, 2) produced(g2, 2) produced(g3, 1) }
{ distrib(0) distrib(1) get(a4, 0) get(a2, 0) get(a3, 1) get(a1, 0) get(a5, 0) get(a0, 0) active(a4, g1) active(a4, g2) active(a2, g0) active(a2, g3) active(a3, g1) active(a1, g2) producer(a4) producer(a2) producer(a3) producer(a1) producer(a5) producer(a0) distributed(0) distributed(1) assembled(1) lowerThan(0, 1) good(g0) good(g1) good(g2) good(g3) produced(g0, 1) produced(g1, 2) produced(g2, 2) produced(g3, 1) }
{ distrib(0) distrib(1) get(a4, 0) get(a2, 1) get(a3, 0) get(a1, 0) get(a5, 0) get(a0, 0) active(a4, g1) active(a4, g2) active(a2, g0) active(a2, g3) active(a3, g1) active(a1, g2) producer(a4) producer(a2) producer(a3) producer(a1) producer(a5) producer(a0) distributed(0) distributed(1) assembled(1) lowerThan(0, 1) good(g0) good(g1) good(g2) good(g3) produced(g0, 1) produced(g1, 2) produced(g2, 2) produced(g3, 1) }
{ distrib(0) distrib(1) get(a4, 1) get(a2, 0) get(a3, 0) get(a1, 0) get(a5, 0) get(a0, 0) active(a4, g1) active(a4, g2) active(a2, g0) active(a2, g3) active(a3, g1) active(a1, g2) producer(a4) producer(a2) producer(a3) producer(a1) producer(a5) producer(a0) distributed(0) distributed(1) assembled(1) lowerThan(0, 1) good(g0) good(g1) good(g2) good(g3) produced(g0, 1) produced(g1, 2) produced(g2, 2) produced(g3, 1) }
{ distrib(0) get(a4, 0) get(a2, 0) get(a3, 0) get(a1, 0) get(a5, 0) get(a0, 0) active(a4, g1) active(a4, g2) active(a2, g0) active(a2, g3) active(a3, g1) active(a1, g2) producer(a4) producer(a2) producer(a3) producer(a1) producer(a5) producer(a0) distributed(0) assembled(1) good(g0) good(g1) good(g2) good(g3) produced(g0, 1) produced(g1, 2) produced(g2, 2) produced(g3, 1) }

Statistics:
	IAS in 98958 msec

Core answer sets:
[runlim] sample:		0.5 seconds, 60.2 MB
[runlim] sample:		1.1 seconds, 67.3 MB
{ distrib(0) distrib(1) get(a4, 0) get(a2, 0) get(a3, 0) get(a1, 0) get(a5, 0) get(a0, 1) active(a4, g1) active(a4, g2) active(a2, g0) active(a2, g3) active(a3, g1) active(a1, g2) producer(a4) producer(a2) producer(a3) producer(a1) producer(a5) producer(a0) distributed(0) distributed(1) assembled(1) lowerThan(0, 1) good(g0) good(g1) good(g2) good(g3) produced(g0, 1) produced(g1, 2) produced(g2, 2) produced(g3, 1) }
{ distrib(0) distrib(1) get(a4, 0) get(a2, 0) get(a3, 0) get(a1, 0) get(a5, 1) get(a0, 0) active(a4, g1) active(a4, g2) active(a2, g0) active(a2, g3) active(a3, g1) active(a1, g2) producer(a4) producer(a2) producer(a3) producer(a1) producer(a5) producer(a0) distributed(0) distributed(1) assembled(1) lowerThan(0, 1) good(g0) good(g1) good(g2) good(g3) produced(g0, 1) produced(g1, 2) produced(g2, 2) produced(g3, 1) }
{ distrib(0) distrib(1) get(a4, 0) get(a2, 0) get(a3, 0) get(a1, 1) get(a5, 0) get(a0, 0) active(a4, g1) active(a4, g2) active(a2, g0) active(a2, g3) active(a3, g1) active(a1, g2) producer(a4) producer(a2) producer(a3) producer(a1) producer(a5) producer(a0) distributed(0) distributed(1) assembled(1) lowerThan(0, 1) good(g0) good(g1) good(g2) good(g3) produced(g0, 1) produced(g1, 2) produced(g2, 2) produced(g3, 1) }
{ distrib(0) distrib(1) get(a4, 0) get(a2, 0) get(a3, 1) get(a1, 0) get(a5, 0) get(a0, 0) active(a4, g1) active(a4, g2) active(a2, g0) active(a2, g3) active(a3, g1) active(a1, g2) producer(a4) producer(a2) producer(a3) producer(a1) producer(a5) producer(a0) distributed(0) distributed(1) assembled(1) lowerThan(0, 1) good(g0) good(g1) good(g2) good(g3) produced(g0, 1) produced(g1, 2) produced(g2, 2) produced(g3, 1) }
{ distrib(0) distrib(1) get(a4, 0) get(a2, 1) get(a3, 0) get(a1, 0) get(a5, 0) get(a0, 0) active(a4, g1) active(a4, g2) active(a2, g0) active(a2, g3) active(a3, g1) active(a1, g2) producer(a4) producer(a2) producer(a3) producer(a1) producer(a5) producer(a0) distributed(0) distributed(1) assembled(1) lowerThan(0, 1) good(g0) good(g1) good(g2) good(g3) produced(g0, 1) produced(g1, 2) produced(g2, 2) produced(g3, 1) }
{ distrib(0) distrib(1) get(a4, 1) get(a2, 0) get(a3, 0) get(a1, 0) get(a5, 0) get(a0, 0) active(a4, g1) active(a4, g2) active(a2, g0) active(a2, g3) active(a3, g1) active(a1, g2) producer(a4) producer(a2) producer(a3) producer(a1) producer(a5) producer(a0) distributed(0) distributed(1) assembled(1) lowerThan(0, 1) good(g0) good(g1) good(g2) good(g3) produced(g0, 1) produced(g1, 2) produced(g2, 2) produced(g3, 1) }
{ distrib(0) get(a4, 0) get(a2, 0) get(a3, 0) get(a1, 0) get(a5, 0) get(a0, 0) active(a4, g1) active(a4, g2) active(a2, g0) active(a2, g3) active(a3, g1) active(a1, g2) producer(a4) producer(a2) producer(a3) producer(a1) producer(a5) producer(a0) distributed(0) assembled(1) good(g0) good(g1) good(g2) good(g3) produced(g0, 1) produced(g1, 2) produced(g2, 2) produced(g3, 1) }

Statistics:
	IAS in 98958 msec
	CAS in 110979 msec
[runlim] end:			Sun Feb 17 22:45:03 2019
[runlim] status:		ok
[runlim] result:		0
[runlim] children:		1109
[runlim] real:			111.31 seconds
[runlim] time:			99.15 seconds
[runlim] space:			1844.6 MB
[runlim] samples:		1110
